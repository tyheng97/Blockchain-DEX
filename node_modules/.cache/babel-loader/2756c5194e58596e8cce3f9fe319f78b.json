{"ast":null,"code":"import _regeneratorRuntime from \"/Users/yiheng/Documents/NTU/Y4S2/CZ4153 Blockchain/crypto_exchange/Blockchain-DEX/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/yiheng/Documents/NTU/Y4S2/CZ4153 Blockchain/crypto_exchange/Blockchain-DEX/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/yiheng/Documents/NTU/Y4S2/CZ4153 Blockchain/crypto_exchange/Blockchain-DEX/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/yiheng/Documents/NTU/Y4S2/CZ4153 Blockchain/crypto_exchange/Blockchain-DEX/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yiheng/Documents/NTU/Y4S2/CZ4153 Blockchain/crypto_exchange/Blockchain-DEX/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/yiheng/Documents/NTU/Y4S2/CZ4153 Blockchain/crypto_exchange/Blockchain-DEX/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/yiheng/Documents/NTU/Y4S2/CZ4153 Blockchain/crypto_exchange/Blockchain-DEX/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yiheng/Documents/NTU/Y4S2/CZ4153 Blockchain/crypto_exchange/Blockchain-DEX/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport Web3 from \"web3\"; // import web3\n\nimport AToken from \"../abis/AToken.json\";\nimport BToken from \"../abis/BToken.json\";\nimport TokenSwap from \"../abis/TokenSwap.json\";\nimport Navbar from \"./Navbar\";\nimport Main from \"./Main\";\nimport \"./App.css\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var web3, accounts, ethBalance, networkId, bTokenData, bToken, bTokenName, bTokenBalance, tokenData, token, aTokenName, aTokenBalance, tokenSwapData, tokenSwap, bTokenRate, aTokenRate, maxBuyPrice, minSellPrice, sellrateid, buyrateid, getamountbuy;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                web3 = window.web3;\n                _context2.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context2.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n                _context2.next = 7;\n                return web3.eth.getBalance(this.state.account);\n\n              case 7:\n                ethBalance = _context2.sent;\n                this.setState({\n                  ethBalance: ethBalance\n                }); /////////////////////// Load BToken balance name ///////////////////////\n\n                _context2.next = 11;\n                return web3.eth.net.getId();\n\n              case 11:\n                networkId = _context2.sent;\n                bTokenData = BToken.networks[networkId];\n\n                if (!bTokenData) {\n                  _context2.next = 26;\n                  break;\n                }\n\n                bToken = new web3.eth.Contract(BToken.abi, bTokenData.address);\n                this.setState({\n                  bToken: bToken\n                });\n                _context2.next = 18;\n                return bToken.methods.symbol.call();\n\n              case 18:\n                bTokenName = _context2.sent;\n                _context2.next = 21;\n                return bToken.methods.balanceOf(this.state.account).call();\n\n              case 21:\n                bTokenBalance = _context2.sent;\n                this.setState({\n                  bTokenBalance: bTokenBalance.toString()\n                });\n                this.setState({\n                  bTokenName: bTokenName.toString()\n                });\n                _context2.next = 27;\n                break;\n\n              case 26:\n                window.alert(\"Token contract not deployed to detected network.\");\n\n              case 27:\n                /////////////////////// Load AToken balance name ///////////////////////\n                tokenData = AToken.networks[networkId];\n\n                if (!tokenData) {\n                  _context2.next = 41;\n                  break;\n                }\n\n                token = new web3.eth.Contract(AToken.abi, tokenData.address);\n                this.setState({\n                  token: token\n                });\n                _context2.next = 33;\n                return token.methods.symbol.call();\n\n              case 33:\n                aTokenName = _context2.sent;\n                _context2.next = 36;\n                return token.methods.balanceOf(this.state.account).call();\n\n              case 36:\n                aTokenBalance = _context2.sent;\n                this.setState({\n                  aTokenBalance: aTokenBalance.toString()\n                });\n                this.setState({\n                  aTokenName: aTokenName.toString()\n                });\n                _context2.next = 42;\n                break;\n\n              case 41:\n                window.alert(\"Token contract not deployed to detected network.\");\n\n              case 42:\n                /////////////////////// Load TokenSwap ///////////////////////\n                tokenSwapData = TokenSwap.networks[networkId];\n\n                if (!tokenSwapData) {\n                  _context2.next = 76;\n                  break;\n                }\n\n                tokenSwap = new web3.eth.Contract(TokenSwap.abi, tokenSwapData.address);\n                this.setState({\n                  tokenSwap: tokenSwap\n                });\n                _context2.next = 48;\n                return tokenSwap.methods.bRate.call();\n\n              case 48:\n                bTokenRate = _context2.sent;\n                this.setState({\n                  bTokenRate: bTokenRate.toString()\n                });\n                _context2.next = 52;\n                return tokenSwap.methods.aRate.call();\n\n              case 52:\n                aTokenRate = _context2.sent;\n                this.setState({\n                  aTokenRate: aTokenRate.toString()\n                });\n                _context2.next = 56;\n                return tokenSwap.methods.maxBuyPrice.call();\n\n              case 56:\n                maxBuyPrice = _context2.sent;\n                this.setState({\n                  maxBuyPrice: maxBuyPrice.toString()\n                });\n                _context2.next = 60;\n                return tokenSwap.methods.minSellPrice.call();\n\n              case 60:\n                minSellPrice = _context2.sent;\n                this.setState({\n                  minSellPrice: minSellPrice.toString()\n                });\n                _context2.next = 64;\n                return tokenSwap.methods.getsellrate.call();\n\n              case 64:\n                sellrateid = _context2.sent;\n                _context2.next = 67;\n                return tokenSwap.methods.getbuyrate.call();\n\n              case 67:\n                buyrateid = _context2.sent;\n                _context2.next = 70;\n                return tokenSwap.methods.getamountbuy.call();\n\n              case 70:\n                getamountbuy = _context2.sent;\n                console.log(\"getamountbuy\", getamountbuy);\n                console.log(\"sellrateid\", sellrateid);\n                console.log(\"buyrateid\", buyrateid); // let buyOrdersInStepCounter = await tokenSwap.methods.buyOrdersInStepCounter.call();\n                // tokenSwap.methods.buyOrdersInStepCounter.call(0).then(function(tester) {\n                //   console.log(\"tester\", tester);\n                // });\n                // this.setState({\n                //   buyOrdersInStepCounter: buyOrdersInStepCounter.toString(),\n                // });\n                // let buySteps = await tokenSwap.methods.buySteps.call();\n                // this.setState({ buySteps: buySteps.toString() });\n                // let buyOrdersInStepCounter = await tokenSwap.methods.buyOrdersInStepCounter.call();\n                // this.setState({\n                //   buyOrdersInStepCounter: buyOrdersInStepCounter.toString(),\n                // });\n\n                _context2.next = 77;\n                break;\n\n              case 76:\n                window.alert(\"TokenSwap contract not deployed to detected network.\");\n\n              case 77:\n                this.setState({\n                  loading: false\n                });\n\n              case 78:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context3.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context3.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");\n                }\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }() /////////////////////// Order book placeBuyOrder TokenSwap ///////////////////////\n\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.placeBuyOrder = function (price, quantity) {\n      _this.setState({\n        loading: true\n      });\n\n      _this.state.token.methods.approve(_this.state.tokenSwap.address, quantity).send({\n        from: _this.state.account\n      }).on(\"transactionHash\", function (hash) {\n        _this.state.tokenSwap.methods.atob(price, quantity).send({\n          from: _this.state.account\n        }).on(\"transactionHash\", function (hash) {\n          _this.setState({\n            loading: false\n          });\n        }).on(\"error\", function (err) {\n          console.log(err);\n\n          _this.setState({\n            limitError: true\n          });\n        });\n      });\n    };\n\n    _this.placeSellOrder = function (price, quantity) {\n      _this.setState({\n        loading: true\n      });\n\n      _this.state.bToken.methods.approve(_this.state.tokenSwap.address, quantity).send({\n        from: _this.state.account\n      }).on(\"transactionHash\", function (hash) {\n        _this.state.tokenSwap.methods.btoa(price, quantity).send({\n          from: _this.state.account\n        }).on(\"transactionHash\", function (hash) {\n          _this.setState({\n            loading: false\n          });\n        }).on(\"error\", function (err) {\n          console.log(err);\n\n          _this.setState({\n            limitError: true\n          });\n        });\n      });\n    };\n\n    _this.buyBTokens = function (etherAmount) {\n      _this.setState({\n        loading: true\n      });\n\n      try {\n        _this.state.tokenSwap.methods.buyBTokens().send({\n          value: etherAmount,\n          from: _this.state.account\n        }).on(\"transactionHash\", function (hash) {\n          _this.setState({\n            loading: false\n          });\n        }).on(\"error\", function (err) {\n          console.log(\"inside here\", err);\n\n          _this.setState({\n            limitError: true\n          });\n        });\n      } catch (err) {\n        console.log(\"here is the errrr look heree\", err);\n\n        _this.setState({\n          loading: false\n        });\n      }\n    };\n\n    _this.sellBTokens = function (tokenAmount) {\n      _this.setState({\n        loading: true\n      });\n\n      _this.state.token.methods.approve(_this.state.tokenSwap.address, tokenAmount).send({\n        from: _this.state.account\n      }).on(\"transactionHash\", function (hash) {\n        _this.state.tokenSwap.methods.sellATokens(tokenAmount).send({\n          from: _this.state.account\n        }).on(\"transactionHash\", function (hash) {\n          _this.setState({\n            loading: false\n          });\n        });\n      });\n    };\n\n    _this.buyATokens = function (etherAmount) {\n      _this.setState({\n        loading: true\n      });\n\n      _this.state.tokenSwap.methods.buyATokens().send({\n        value: etherAmount,\n        from: _this.state.account\n      }).on(\"transactionHash\", function (hash) {\n        _this.setState({\n          loading: false\n        });\n      });\n    };\n\n    _this.limitBuyATokens = function (rate, etherAmount) {\n      _this.setState({\n        loading: true\n      });\n\n      try {\n        _this.state.tokenSwap.methods.limitBuyATokens(rate).send({\n          value: etherAmount,\n          from: _this.state.account\n        }).on(\"transactionHash\", function (hash) {\n          _this.setState({\n            loading: false\n          });\n        }).on(\"error\", function (err) {\n          console.log(\"inside here\", err);\n\n          _this.setState({\n            limitError: true\n          });\n        });\n      } catch (err) {\n        console.log(\"here is the errrr look heree\", err);\n\n        _this.setState({\n          loading: false\n        });\n      }\n    };\n\n    _this.sellATokens = function (tokenAmount) {\n      _this.setState({\n        loading: true\n      });\n\n      _this.state.token.methods.approve(_this.state.tokenSwap.address, tokenAmount).send({\n        from: _this.state.account\n      }).on(\"transactionHash\", function (hash) {\n        _this.state.tokenSwap.methods.sellATokens(tokenAmount).send({\n          from: _this.state.account\n        }).on(\"transactionHash\", function (hash) {\n          _this.setState({\n            loading: false\n          });\n        });\n      });\n    };\n\n    _this.limitSellATokens = function (rate, tokenAmount) {\n      _this.setState({\n        loading: true\n      });\n\n      try {\n        _this.state.token.methods.approve(_this.state.tokenSwap.address, tokenAmount).send({\n          from: _this.state.account\n        }).on(\"transactionHash\", function (hash) {\n          _this.state.tokenSwap.methods.limitSellATokens(tokenAmount, rate).send({\n            from: _this.state.account\n          }).on(\"transactionHash\", function (hash) {\n            _this.setState({\n              loading: false\n            });\n          }).on(\"error\", function (err) {\n            console.log(\"inside here\", err);\n\n            _this.setState({\n              limitError: true\n            });\n          });\n        });\n      } catch (err) {\n        console.log(\"here is the errrr look heree\", err);\n\n        _this.setState({\n          loading: false\n        });\n      }\n    };\n\n    _this.retryLimitOrder = function () {\n      _this.setState({\n        limitError: false\n      });\n\n      _this.setState({\n        loading: false\n      });\n    };\n\n    _this.state = {\n      account: \"\",\n      token: {},\n      tokenSwap: {},\n      ethBalance: \"0\",\n      aTokenBalance: \"0\",\n      bTokenBalance: \"0\",\n      loading: true,\n      limitError: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var content;\n\n      if (this.state.loading && this.state.limitError === false) {\n        content = React.createElement(\"p\", {\n          id: \"loader\",\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292\n          },\n          __self: this\n        }, \"Loading...\");\n      } else if (this.state.limitError) {\n        content = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 298\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 299\n          },\n          __self: this\n        }, \"Limit Order Failed\"), React.createElement(\"button\", {\n          onClick: this.retryLimitOrder,\n          className: \"btn btn-primary btn-block btn-lg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300\n          },\n          __self: this\n        }, \"Click to Retry again\"));\n      } else {\n        content = React.createElement(React.Fragment, null, React.createElement(Main, {\n          aTokenName: this.state.aTokenName,\n          ethBalance: this.state.ethBalance,\n          aTokenBalance: this.state.aTokenBalance,\n          buyATokens: this.buyATokens,\n          sellATokens: this.sellATokens,\n          limitBuyATokens: this.limitBuyATokens,\n          limitSellATokens: this.limitSellATokens,\n          aTokenRate: this.state.aTokenRate,\n          bTokenRate: this.state.bTokenRate,\n          bTokenName: this.state.bTokenName,\n          bTokenBalance: this.state.bTokenBalance,\n          buyBTokens: this.buyBTokens,\n          sellBTokens: this.sellBTokens,\n          placeBuyOrder: this.placeBuyOrder,\n          placeSellOrder: this.placeSellOrder,\n          maxBuyPrice: this.state.maxBuyPrice,\n          minSellPrice: this.state.minSellPrice // buyOrdersInStep={this.state.buyOrdersInStep}\n          // buySteps={this.state.buySteps}\n          // buyOrdersInStepCounter={this.state.buyOrdersInStepCounter}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        account: this.state.account,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"mt-5 container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        role: \"main\",\n        className: \"ml-auto mr-auto col-lg-12\",\n        style: {\n          maxWidth: \"600px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ml-auto mr-auto content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, content)))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/yiheng/Documents/NTU/Y4S2/CZ4153 Blockchain/crypto_exchange/Blockchain-DEX/src/components/App.js"],"names":["React","Component","Web3","AToken","BToken","TokenSwap","Navbar","Main","App","loadWeb3","loadBlockchainData","web3","window","eth","getAccounts","accounts","setState","account","getBalance","state","ethBalance","net","getId","networkId","bTokenData","networks","bToken","Contract","abi","address","methods","symbol","call","bTokenName","balanceOf","bTokenBalance","toString","alert","tokenData","token","aTokenName","aTokenBalance","tokenSwapData","tokenSwap","bRate","bTokenRate","aRate","aTokenRate","maxBuyPrice","minSellPrice","getsellrate","sellrateid","getbuyrate","buyrateid","getamountbuy","console","log","loading","ethereum","enable","currentProvider","props","placeBuyOrder","price","quantity","approve","send","from","on","hash","atob","err","limitError","placeSellOrder","btoa","buyBTokens","etherAmount","value","sellBTokens","tokenAmount","sellATokens","buyATokens","limitBuyATokens","rate","limitSellATokens","retryLimitOrder","content","maxWidth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Web3 from \"web3\"; // import web3\nimport AToken from \"../abis/AToken.json\";\nimport BToken from \"../abis/BToken.json\";\nimport TokenSwap from \"../abis/TokenSwap.json\";\nimport Navbar from \"./Navbar\";\nimport Main from \"./Main\";\nimport \"./App.css\";\n\nclass App extends Component {\n  async componentWillMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n\n    const accounts = await web3.eth.getAccounts();\n    this.setState({ account: accounts[0] });\n\n    const ethBalance = await web3.eth.getBalance(this.state.account);\n    this.setState({ ethBalance });\n\n    /////////////////////// Load BToken balance name ///////////////////////\n    const networkId = await web3.eth.net.getId();\n\n    const bTokenData = BToken.networks[networkId];\n    if (bTokenData) {\n      const bToken = new web3.eth.Contract(BToken.abi, bTokenData.address);\n      this.setState({ bToken });\n      let bTokenName = await bToken.methods.symbol.call();\n      let bTokenBalance = await bToken.methods\n        .balanceOf(this.state.account)\n        .call();\n      this.setState({ bTokenBalance: bTokenBalance.toString() });\n      this.setState({ bTokenName: bTokenName.toString() });\n    } else {\n      window.alert(\"Token contract not deployed to detected network.\");\n    }\n\n    /////////////////////// Load AToken balance name ///////////////////////\n    const tokenData = AToken.networks[networkId];\n    if (tokenData) {\n      const token = new web3.eth.Contract(AToken.abi, tokenData.address);\n      this.setState({ token });\n      let aTokenName = await token.methods.symbol.call();\n      let aTokenBalance = await token.methods\n        .balanceOf(this.state.account)\n        .call();\n\n      this.setState({ aTokenBalance: aTokenBalance.toString() });\n      this.setState({ aTokenName: aTokenName.toString() });\n    } else {\n      window.alert(\"Token contract not deployed to detected network.\");\n    }\n\n    /////////////////////// Load TokenSwap ///////////////////////\n    const tokenSwapData = TokenSwap.networks[networkId];\n    if (tokenSwapData) {\n      const tokenSwap = new web3.eth.Contract(\n        TokenSwap.abi,\n        tokenSwapData.address\n      );\n      this.setState({ tokenSwap });\n      let bTokenRate = await tokenSwap.methods.bRate.call();\n      this.setState({ bTokenRate: bTokenRate.toString() });\n      let aTokenRate = await tokenSwap.methods.aRate.call();\n      this.setState({ aTokenRate: aTokenRate.toString() });\n      let maxBuyPrice = await tokenSwap.methods.maxBuyPrice.call();\n      this.setState({ maxBuyPrice: maxBuyPrice.toString() });\n      let minSellPrice = await tokenSwap.methods.minSellPrice.call();\n      this.setState({ minSellPrice: minSellPrice.toString() });\n\n      let sellrateid = await tokenSwap.methods.getsellrate.call();\n      let buyrateid = await tokenSwap.methods.getbuyrate.call();\n\n      let getamountbuy = await tokenSwap.methods.getamountbuy.call();\n\n      console.log(\"getamountbuy\", getamountbuy);\n\n      console.log(\"sellrateid\", sellrateid);\n\n      console.log(\"buyrateid\", buyrateid);\n\n      // let buyOrdersInStepCounter = await tokenSwap.methods.buyOrdersInStepCounter.call();\n\n      // tokenSwap.methods.buyOrdersInStepCounter.call(0).then(function(tester) {\n      //   console.log(\"tester\", tester);\n      // });\n\n      // this.setState({\n      //   buyOrdersInStepCounter: buyOrdersInStepCounter.toString(),\n      // });\n\n      // let buySteps = await tokenSwap.methods.buySteps.call();\n      // this.setState({ buySteps: buySteps.toString() });\n      // let buyOrdersInStepCounter = await tokenSwap.methods.buyOrdersInStepCounter.call();\n      // this.setState({\n      //   buyOrdersInStepCounter: buyOrdersInStepCounter.toString(),\n      // });\n    } else {\n      window.alert(\"TokenSwap contract not deployed to detected network.\");\n    }\n\n    this.setState({ loading: false });\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      );\n    }\n  }\n\n  /////////////////////// Order book placeBuyOrder TokenSwap ///////////////////////\n\n  placeBuyOrder = (price, quantity) => {\n    this.setState({ loading: true });\n\n    this.state.token.methods\n      .approve(this.state.tokenSwap.address, quantity)\n      .send({ from: this.state.account })\n      .on(\"transactionHash\", (hash) => {\n        this.state.tokenSwap.methods\n          .atob(price, quantity)\n          .send({ from: this.state.account })\n          .on(\"transactionHash\", (hash) => {\n            this.setState({ loading: false });\n          })\n          .on(\"error\", (err) => {\n            console.log(err);\n            this.setState({ limitError: true });\n          });\n      });\n  };\n\n  placeSellOrder = (price, quantity) => {\n    this.setState({ loading: true });\n\n    this.state.bToken.methods\n      .approve(this.state.tokenSwap.address, quantity)\n      .send({ from: this.state.account })\n      .on(\"transactionHash\", (hash) => {\n        this.state.tokenSwap.methods\n          .btoa(price, quantity)\n          .send({ from: this.state.account })\n          .on(\"transactionHash\", (hash) => {\n            this.setState({ loading: false });\n          })\n          .on(\"error\", (err) => {\n            console.log(err);\n            this.setState({ limitError: true });\n          });\n      });\n  };\n  /////////////////////// bToken TokenSwap ///////////////////////\n\n  buyBTokens = (etherAmount) => {\n    this.setState({ loading: true });\n    try {\n      this.state.tokenSwap.methods\n        .buyBTokens()\n        .send({ value: etherAmount, from: this.state.account })\n        .on(\"transactionHash\", (hash) => {\n          this.setState({ loading: false });\n        })\n        .on(\"error\", (err) => {\n          console.log(\"inside here\", err);\n          this.setState({ limitError: true });\n        });\n    } catch (err) {\n      console.log(\"here is the errrr look heree\", err);\n      this.setState({ loading: false });\n    }\n  };\n\n  sellBTokens = (tokenAmount) => {\n    this.setState({ loading: true });\n    this.state.token.methods\n      .approve(this.state.tokenSwap.address, tokenAmount)\n      .send({ from: this.state.account })\n      .on(\"transactionHash\", (hash) => {\n        this.state.tokenSwap.methods\n          .sellATokens(tokenAmount)\n          .send({ from: this.state.account })\n          .on(\"transactionHash\", (hash) => {\n            this.setState({ loading: false });\n          });\n      });\n  };\n  /////////////////////// aToken TokenSwap ///////////////////////\n\n  buyATokens = (etherAmount) => {\n    this.setState({ loading: true });\n    this.state.tokenSwap.methods\n      .buyATokens()\n      .send({ value: etherAmount, from: this.state.account })\n      .on(\"transactionHash\", (hash) => {\n        this.setState({ loading: false });\n      });\n  };\n\n  limitBuyATokens = (rate, etherAmount) => {\n    this.setState({ loading: true });\n    try {\n      this.state.tokenSwap.methods\n        .limitBuyATokens(rate)\n        .send({ value: etherAmount, from: this.state.account })\n        .on(\"transactionHash\", (hash) => {\n          this.setState({ loading: false });\n        })\n        .on(\"error\", (err) => {\n          console.log(\"inside here\", err);\n          this.setState({ limitError: true });\n        });\n    } catch (err) {\n      console.log(\"here is the errrr look heree\", err);\n      this.setState({ loading: false });\n    }\n  };\n\n  sellATokens = (tokenAmount) => {\n    this.setState({ loading: true });\n    this.state.token.methods\n      .approve(this.state.tokenSwap.address, tokenAmount)\n      .send({ from: this.state.account })\n      .on(\"transactionHash\", (hash) => {\n        this.state.tokenSwap.methods\n          .sellATokens(tokenAmount)\n          .send({ from: this.state.account })\n          .on(\"transactionHash\", (hash) => {\n            this.setState({ loading: false });\n          });\n      });\n  };\n\n  limitSellATokens = (rate, tokenAmount) => {\n    this.setState({ loading: true });\n    try {\n      this.state.token.methods\n        .approve(this.state.tokenSwap.address, tokenAmount)\n        .send({ from: this.state.account })\n        .on(\"transactionHash\", (hash) => {\n          this.state.tokenSwap.methods\n            .limitSellATokens(tokenAmount, rate)\n            .send({ from: this.state.account })\n            .on(\"transactionHash\", (hash) => {\n              this.setState({ loading: false });\n            })\n            .on(\"error\", (err) => {\n              console.log(\"inside here\", err);\n              this.setState({ limitError: true });\n            });\n        });\n    } catch (err) {\n      console.log(\"here is the errrr look heree\", err);\n      this.setState({ loading: false });\n    }\n  };\n\n  //////////////////// Error handling /////////////////////////////\n  retryLimitOrder = () => {\n    this.setState({ limitError: false });\n    this.setState({ loading: false });\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: \"\",\n      token: {},\n      tokenSwap: {},\n      ethBalance: \"0\",\n      aTokenBalance: \"0\",\n      bTokenBalance: \"0\",\n      loading: true,\n      limitError: false,\n    };\n  }\n\n  render() {\n    let content;\n    if (this.state.loading && this.state.limitError === false) {\n      content = (\n        <p id=\"loader\" className=\"text-center\">\n          Loading...\n        </p>\n      );\n    } else if (this.state.limitError) {\n      content = (\n        <div>\n          <p className=\"text-center\">Limit Order Failed</p>\n          <button\n            onClick={this.retryLimitOrder}\n            className=\"btn btn-primary btn-block btn-lg\"\n          >\n            Click to Retry again\n          </button>\n        </div>\n      );\n    } else {\n      content = (\n        <>\n          <Main\n            aTokenName={this.state.aTokenName}\n            ethBalance={this.state.ethBalance}\n            aTokenBalance={this.state.aTokenBalance}\n            buyATokens={this.buyATokens}\n            sellATokens={this.sellATokens}\n            limitBuyATokens={this.limitBuyATokens}\n            limitSellATokens={this.limitSellATokens}\n            aTokenRate={this.state.aTokenRate}\n            bTokenRate={this.state.bTokenRate}\n            bTokenName={this.state.bTokenName}\n            bTokenBalance={this.state.bTokenBalance}\n            buyBTokens={this.buyBTokens}\n            sellBTokens={this.sellBTokens}\n            placeBuyOrder={this.placeBuyOrder}\n            placeSellOrder={this.placeSellOrder}\n            maxBuyPrice={this.state.maxBuyPrice}\n            minSellPrice={this.state.minSellPrice}\n            // buyOrdersInStep={this.state.buyOrdersInStep}\n            // buySteps={this.state.buySteps}\n            // buyOrdersInStepCounter={this.state.buyOrdersInStepCounter}\n          />\n        </>\n      );\n    }\n\n    return (\n      <div>\n        <Navbar account={this.state.account} />\n        <div className=\"mt-5 container-fluid\">\n          <div className=\"row\">\n            <main\n              role=\"main\"\n              className=\"ml-auto mr-auto col-lg-12\"\n              style={{ maxWidth: \"600px\" }}\n            >\n              <div className=\"ml-auto mr-auto content\">{content}</div>\n            </main>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}