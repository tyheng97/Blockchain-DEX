{"ast":null,"code":"import _regeneratorRuntime from \"/Users/yiheng/Documents/NTU/Y4S2/CZ4153 Blockchain/crypto_exchange/Blockchain-DEX/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/yiheng/Documents/NTU/Y4S2/CZ4153 Blockchain/crypto_exchange/Blockchain-DEX/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/yiheng/Documents/NTU/Y4S2/CZ4153 Blockchain/crypto_exchange/Blockchain-DEX/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/yiheng/Documents/NTU/Y4S2/CZ4153 Blockchain/crypto_exchange/Blockchain-DEX/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yiheng/Documents/NTU/Y4S2/CZ4153 Blockchain/crypto_exchange/Blockchain-DEX/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/yiheng/Documents/NTU/Y4S2/CZ4153 Blockchain/crypto_exchange/Blockchain-DEX/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/yiheng/Documents/NTU/Y4S2/CZ4153 Blockchain/crypto_exchange/Blockchain-DEX/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yiheng/Documents/NTU/Y4S2/CZ4153 Blockchain/crypto_exchange/Blockchain-DEX/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport Web3 from \"web3\"; // import web3\n\nimport CoolToken from \"../abis/CoolToken.json\";\nimport SecondToken from \"../abis/SecondToken.json\";\nimport EthSwap from \"../abis/EthSwap.json\";\nimport Navbar from \"./Navbar\";\nimport Main from \"./Main\";\nimport \"./App.css\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var web3, accounts, ethBalance, networkId, tokenData, token, coolTokenName, coolTokenBalance, ethSwapData, ethSwap;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                web3 = window.web3;\n                _context2.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context2.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n                _context2.next = 7;\n                return web3.eth.getBalance(this.state.account);\n\n              case 7:\n                ethBalance = _context2.sent;\n                this.setState({\n                  ethBalance: ethBalance\n                }); // Load Token\n\n                _context2.next = 11;\n                return web3.eth.net.getId();\n\n              case 11:\n                networkId = _context2.sent;\n                tokenData = CoolToken.networks[networkId];\n\n                if (!tokenData) {\n                  _context2.next = 26;\n                  break;\n                }\n\n                token = new web3.eth.Contract(CoolToken.abi, tokenData.address);\n                this.setState({\n                  token: token\n                });\n                _context2.next = 18;\n                return token.methods.name.call();\n\n              case 18:\n                coolTokenName = _context2.sent;\n                _context2.next = 21;\n                return token.methods.balanceOf(this.state.account).call();\n\n              case 21:\n                coolTokenBalance = _context2.sent;\n                this.setState({\n                  coolTokenBalance: coolTokenBalance.toString()\n                });\n                this.setState({\n                  coolTokenName: coolTokenName.toString()\n                });\n                _context2.next = 27;\n                break;\n\n              case 26:\n                window.alert(\"Token contract not deployed to detected network.\");\n\n              case 27:\n                // Load EthSwap\n                ethSwapData = EthSwap.networks[networkId];\n\n                if (ethSwapData) {\n                  ethSwap = new web3.eth.Contract(EthSwap.abi, ethSwapData.address);\n                  this.setState({\n                    ethSwap: ethSwap\n                  });\n                } else {\n                  window.alert(\"EthSwap contract not deployed to detected network.\");\n                }\n\n                this.setState({\n                  loading: false\n                });\n\n              case 30:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context3.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context3.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");\n                }\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.buyCoolTokens = function (etherAmount) {\n      _this.setState({\n        loading: true\n      });\n\n      _this.state.ethSwap.methods.buyCoolTokens().send({\n        value: etherAmount,\n        from: _this.state.account\n      }).on(\"transactionHash\", function (hash) {\n        _this.setState({\n          loading: false\n        });\n      });\n    };\n\n    _this.limitBuyCoolTokens = function (rate, etherAmount) {\n      _this.setState({\n        loading: true\n      });\n\n      _this.state.ethSwap.methods.limitBuyCoolTokens(rate).send({\n        value: etherAmount,\n        from: _this.state.account\n      }).on(\"transactionHash\", function (hash) {\n        _this.setState({\n          loading: false\n        });\n      });\n    };\n\n    _this.sellCoolTokens = function (tokenAmount) {\n      _this.setState({\n        loading: true\n      });\n\n      _this.state.token.methods.approve(_this.state.ethSwap.address, tokenAmount).send({\n        from: _this.state.account\n      }).on(\"transactionHash\", function (hash) {\n        _this.state.ethSwap.methods.sellCoolTokens(tokenAmount).send({\n          from: _this.state.account\n        }).on(\"transactionHash\", function (hash) {\n          _this.setState({\n            loading: false\n          });\n        });\n      });\n    };\n\n    _this.limitSellCoolTokens = function (rate, etherAmount) {\n      _this.setState({\n        loading: true\n      });\n\n      _this.state.ethSwap.methods.limitSellCoolTokens(rate).send({\n        value: etherAmount,\n        from: _this.state.account\n      }).on(\"transactionHash\", function (hash) {\n        _this.setState({\n          loading: false\n        });\n      });\n    };\n\n    _this.state = {\n      account: \"\",\n      token: {},\n      ethSwap: {},\n      ethBalance: \"0\",\n      coolTokenBalance: \"0\",\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var content;\n\n      if (this.state.loading) {\n        content = React.createElement(\"p\", {\n          id: \"loader\",\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, \"Loading...\");\n      } else {\n        content = React.createElement(Main, {\n          coolTokenName: this.state.coolTokenName,\n          ethBalance: this.state.ethBalance,\n          coolTokenBalance: this.state.coolTokenBalance,\n          buyCoolTokens: this.buyCoolTokens,\n          sellCoolTokens: this.sellCoolTokens,\n          limitBuyCoolTokens: this.limitBuyCoolTokens,\n          limitSellCoolTokens: this.limitSellCoolTokens,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        account: this.state.account,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 ml-auto mr-auto\",\n        style: {\n          maxWidth: \"600px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content mr-auto ml-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, content)))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/yiheng/Documents/NTU/Y4S2/CZ4153 Blockchain/crypto_exchange/Blockchain-DEX/src/components/App.js"],"names":["React","Component","Web3","CoolToken","SecondToken","EthSwap","Navbar","Main","App","loadWeb3","loadBlockchainData","web3","window","eth","getAccounts","accounts","setState","account","getBalance","state","ethBalance","net","getId","networkId","tokenData","networks","token","Contract","abi","address","methods","name","call","coolTokenName","balanceOf","coolTokenBalance","toString","alert","ethSwapData","ethSwap","loading","ethereum","enable","currentProvider","props","buyCoolTokens","etherAmount","send","value","from","on","hash","limitBuyCoolTokens","rate","sellCoolTokens","tokenAmount","approve","limitSellCoolTokens","content","maxWidth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Web3 from \"web3\"; // import web3\nimport CoolToken from \"../abis/CoolToken.json\";\nimport SecondToken from \"../abis/SecondToken.json\";\nimport EthSwap from \"../abis/EthSwap.json\";\nimport Navbar from \"./Navbar\";\nimport Main from \"./Main\";\nimport \"./App.css\";\n\nclass App extends Component {\n  async componentWillMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n\n    const accounts = await web3.eth.getAccounts();\n    this.setState({ account: accounts[0] });\n\n    const ethBalance = await web3.eth.getBalance(this.state.account);\n    this.setState({ ethBalance });\n\n    // Load Token\n    const networkId = await web3.eth.net.getId();\n    const tokenData = CoolToken.networks[networkId];\n    if (tokenData) {\n      const token = new web3.eth.Contract(CoolToken.abi, tokenData.address);\n      this.setState({ token });\n      let coolTokenName = await token.methods.name.call();\n      let coolTokenBalance = await token.methods\n        .balanceOf(this.state.account)\n        .call();\n      this.setState({ coolTokenBalance: coolTokenBalance.toString() });\n      this.setState({ coolTokenName: coolTokenName.toString() });\n    } else {\n      window.alert(\"Token contract not deployed to detected network.\");\n    }\n\n    // Load EthSwap\n    const ethSwapData = EthSwap.networks[networkId];\n    if (ethSwapData) {\n      const ethSwap = new web3.eth.Contract(EthSwap.abi, ethSwapData.address);\n      this.setState({ ethSwap });\n    } else {\n      window.alert(\"EthSwap contract not deployed to detected network.\");\n    }\n\n    this.setState({ loading: false });\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      );\n    }\n  }\n\n  buyCoolTokens = (etherAmount) => {\n    this.setState({ loading: true });\n    this.state.ethSwap.methods\n      .buyCoolTokens()\n      .send({ value: etherAmount, from: this.state.account })\n      .on(\"transactionHash\", (hash) => {\n        this.setState({ loading: false });\n      });\n  };\n\n  limitBuyCoolTokens = (rate, etherAmount) => {\n    this.setState({ loading: true });\n    this.state.ethSwap.methods\n      .limitBuyCoolTokens(rate)\n      .send({ value: etherAmount, from: this.state.account })\n      .on(\"transactionHash\", (hash) => {\n        this.setState({ loading: false });\n      });\n  };\n\n  sellCoolTokens = (tokenAmount) => {\n    this.setState({ loading: true });\n    this.state.token.methods\n      .approve(this.state.ethSwap.address, tokenAmount)\n      .send({ from: this.state.account })\n      .on(\"transactionHash\", (hash) => {\n        this.state.ethSwap.methods\n          .sellCoolTokens(tokenAmount)\n          .send({ from: this.state.account })\n          .on(\"transactionHash\", (hash) => {\n            this.setState({ loading: false });\n          });\n      });\n  };\n  limitSellCoolTokens = (rate, etherAmount) => {\n    this.setState({ loading: true });\n    this.state.ethSwap.methods\n      .limitSellCoolTokens(rate)\n      .send({ value: etherAmount, from: this.state.account })\n      .on(\"transactionHash\", (hash) => {\n        this.setState({ loading: false });\n      });\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: \"\",\n      token: {},\n      ethSwap: {},\n      ethBalance: \"0\",\n      coolTokenBalance: \"0\",\n      loading: true,\n    };\n  }\n\n  render() {\n    let content;\n    if (this.state.loading) {\n      content = (\n        <p id=\"loader\" className=\"text-center\">\n          Loading...\n        </p>\n      );\n    } else {\n      content = (\n        <Main\n          coolTokenName={this.state.coolTokenName}\n          ethBalance={this.state.ethBalance}\n          coolTokenBalance={this.state.coolTokenBalance}\n          buyCoolTokens={this.buyCoolTokens}\n          sellCoolTokens={this.sellCoolTokens}\n          limitBuyCoolTokens={this.limitBuyCoolTokens}\n          limitSellCoolTokens={this.limitSellCoolTokens}\n        />\n      );\n    }\n\n    return (\n      <div>\n        <Navbar account={this.state.account} />\n        <div className=\"container-fluid mt-5\">\n          <div className=\"row\">\n            <main\n              role=\"main\"\n              className=\"col-lg-12 ml-auto mr-auto\"\n              style={{ maxWidth: \"600px\" }}\n            >\n              <div className=\"content mr-auto ml-auto\">{content}</div>\n            </main>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}