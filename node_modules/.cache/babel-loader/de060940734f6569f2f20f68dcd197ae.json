{"ast":null,"code":"import _regeneratorRuntime from \"/Users/yiheng/Documents/NTU/Y4S2/CZ4153 Blockchain/crypto_exchange/Blockchain-DEX/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/yiheng/Documents/NTU/Y4S2/CZ4153 Blockchain/crypto_exchange/Blockchain-DEX/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/yiheng/Documents/NTU/Y4S2/CZ4153 Blockchain/crypto_exchange/Blockchain-DEX/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/yiheng/Documents/NTU/Y4S2/CZ4153 Blockchain/crypto_exchange/Blockchain-DEX/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yiheng/Documents/NTU/Y4S2/CZ4153 Blockchain/crypto_exchange/Blockchain-DEX/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/yiheng/Documents/NTU/Y4S2/CZ4153 Blockchain/crypto_exchange/Blockchain-DEX/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/yiheng/Documents/NTU/Y4S2/CZ4153 Blockchain/crypto_exchange/Blockchain-DEX/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yiheng/Documents/NTU/Y4S2/CZ4153 Blockchain/crypto_exchange/Blockchain-DEX/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport Web3 from \"web3\"; // import web3\n\nimport CoolToken from \"../abis/CoolToken.json\";\nimport SecondToken from \"../abis/SecondToken.json\";\nimport EthSwap from \"../abis/EthSwap.json\";\nimport Navbar from \"./Navbar\";\nimport Main from \"./Main\";\nimport \"./App.css\";\nimport NewForm from \"./NewForm\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var web3, accounts, ethBalance, networkId, secondTokenData, secondToken, secondTokenName, secondTokenBalance, tokenData, token, coolTokenName, coolTokenBalance, ethSwapData, ethSwap, secondTokenRate, coolTokenRate;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                web3 = window.web3;\n                _context2.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context2.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n                _context2.next = 7;\n                return web3.eth.getBalance(this.state.account);\n\n              case 7:\n                ethBalance = _context2.sent;\n                this.setState({\n                  ethBalance: ethBalance\n                }); /////////////////////// Load SecondToken balance name ///////////////////////\n\n                _context2.next = 11;\n                return web3.eth.net.getId();\n\n              case 11:\n                networkId = _context2.sent;\n                secondTokenData = SecondToken.networks[networkId];\n\n                if (!secondTokenData) {\n                  _context2.next = 26;\n                  break;\n                }\n\n                secondToken = new web3.eth.Contract(SecondToken.abi, secondTokenData.address);\n                this.setState({\n                  secondToken: secondToken\n                });\n                _context2.next = 18;\n                return secondToken.methods.symbol.call();\n\n              case 18:\n                secondTokenName = _context2.sent;\n                _context2.next = 21;\n                return secondToken.methods.balanceOf(this.state.account).call();\n\n              case 21:\n                secondTokenBalance = _context2.sent;\n                this.setState({\n                  secondTokenBalance: secondTokenBalance.toString()\n                });\n                this.setState({\n                  secondTokenName: secondTokenName.toString()\n                });\n                _context2.next = 27;\n                break;\n\n              case 26:\n                window.alert(\"Token contract not deployed to detected network.\");\n\n              case 27:\n                /////////////////////// Load CoolToken balance name ///////////////////////\n                tokenData = CoolToken.networks[networkId];\n\n                if (!tokenData) {\n                  _context2.next = 41;\n                  break;\n                }\n\n                token = new web3.eth.Contract(CoolToken.abi, tokenData.address);\n                this.setState({\n                  token: token\n                });\n                _context2.next = 33;\n                return token.methods.symbol.call();\n\n              case 33:\n                coolTokenName = _context2.sent;\n                _context2.next = 36;\n                return token.methods.balanceOf(this.state.account).call();\n\n              case 36:\n                coolTokenBalance = _context2.sent;\n                this.setState({\n                  coolTokenBalance: coolTokenBalance.toString()\n                });\n                this.setState({\n                  coolTokenName: coolTokenName.toString()\n                });\n                _context2.next = 42;\n                break;\n\n              case 41:\n                window.alert(\"Token contract not deployed to detected network.\");\n\n              case 42:\n                /////////////////////// Load EthSwap ///////////////////////\n                ethSwapData = EthSwap.networks[networkId];\n\n                if (!ethSwapData) {\n                  _context2.next = 56;\n                  break;\n                }\n\n                ethSwap = new web3.eth.Contract(EthSwap.abi, ethSwapData.address);\n                this.setState({\n                  ethSwap: ethSwap\n                });\n                _context2.next = 48;\n                return ethSwap.methods.secondRate.call();\n\n              case 48:\n                secondTokenRate = _context2.sent;\n                this.setState({\n                  secondTokenRate: secondTokenRate.toString()\n                });\n                _context2.next = 52;\n                return ethSwap.methods.coolRate.call();\n\n              case 52:\n                coolTokenRate = _context2.sent;\n                this.setState({\n                  coolTokenRate: coolTokenRate.toString()\n                });\n                _context2.next = 57;\n                break;\n\n              case 56:\n                window.alert(\"EthSwap contract not deployed to detected network.\");\n\n              case 57:\n                this.setState({\n                  loading: false\n                });\n\n              case 58:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context3.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context3.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");\n                }\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }() /////////////////////// Order book placeBuyOrder EthSwap ///////////////////////\n\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.placeBuyOrder = function (price, quantity) {\n      _this.setState({\n        loading: true\n      });\n\n      try {\n        _this.state.ethSwap.methods.placeBuyOrder(price, quantity).send({\n          from: _this.state.account\n        }).on(\"transactionHash\", function (hash) {\n          _this.setState({\n            loading: false\n          });\n        }).on(\"error\", function (err) {\n          console.log(\"inside here\", err);\n\n          _this.setState({\n            limitError: true\n          });\n        });\n      } catch (err) {\n        console.log(\"here is the errrr look heree\", err);\n\n        _this.setState({\n          loading: false\n        });\n      }\n    };\n\n    _this.placeSellOrder = function (price, quantity) {\n      _this.setState({\n        loading: true\n      });\n\n      try {\n        _this.state.ethSwap.methods.placeSellOrder(price, quantity).send({\n          from: _this.state.account\n        }).on(\"transactionHash\", function (hash) {\n          _this.setState({\n            loading: false\n          });\n        });\n      } catch (err) {\n        console.log(\"here is the errrr look heree\", err);\n\n        _this.setState({\n          loading: false\n        });\n      }\n    };\n\n    _this.buySecondTokens = function (etherAmount) {\n      _this.setState({\n        loading: true\n      });\n\n      try {\n        _this.state.ethSwap.methods.buySecondTokens().send({\n          value: etherAmount,\n          from: _this.state.account\n        }).on(\"transactionHash\", function (hash) {\n          _this.setState({\n            loading: false\n          });\n        }).on(\"error\", function (err) {\n          console.log(\"inside here\", err);\n\n          _this.setState({\n            limitError: true\n          });\n        });\n      } catch (err) {\n        console.log(\"here is the errrr look heree\", err);\n\n        _this.setState({\n          loading: false\n        });\n      }\n    };\n\n    _this.sellSecondTokens = function (tokenAmount) {\n      _this.setState({\n        loading: true\n      });\n\n      _this.state.token.methods.approve(_this.state.ethSwap.address, tokenAmount).send({\n        from: _this.state.account\n      }).on(\"transactionHash\", function (hash) {\n        _this.state.ethSwap.methods.sellCoolTokens(tokenAmount).send({\n          from: _this.state.account\n        }).on(\"transactionHash\", function (hash) {\n          _this.setState({\n            loading: false\n          });\n        });\n      });\n    };\n\n    _this.buyCoolTokens = function (etherAmount) {\n      _this.setState({\n        loading: true\n      });\n\n      _this.state.ethSwap.methods.buyCoolTokens().send({\n        value: etherAmount,\n        from: _this.state.account\n      }).on(\"transactionHash\", function (hash) {\n        _this.setState({\n          loading: false\n        });\n      });\n    };\n\n    _this.limitBuyCoolTokens = function (rate, etherAmount) {\n      _this.setState({\n        loading: true\n      });\n\n      try {\n        _this.state.ethSwap.methods.limitBuyCoolTokens(rate).send({\n          value: etherAmount,\n          from: _this.state.account\n        }).on(\"transactionHash\", function (hash) {\n          _this.setState({\n            loading: false\n          });\n        }).on(\"error\", function (err) {\n          console.log(\"inside here\", err);\n\n          _this.setState({\n            limitError: true\n          });\n        });\n      } catch (err) {\n        console.log(\"here is the errrr look heree\", err);\n\n        _this.setState({\n          loading: false\n        });\n      }\n    };\n\n    _this.sellCoolTokens = function (tokenAmount) {\n      _this.setState({\n        loading: true\n      });\n\n      _this.state.token.methods.approve(_this.state.ethSwap.address, tokenAmount).send({\n        from: _this.state.account\n      }).on(\"transactionHash\", function (hash) {\n        _this.state.ethSwap.methods.sellCoolTokens(tokenAmount).send({\n          from: _this.state.account\n        }).on(\"transactionHash\", function (hash) {\n          _this.setState({\n            loading: false\n          });\n        });\n      });\n    };\n\n    _this.limitSellCoolTokens = function (rate, tokenAmount) {\n      _this.setState({\n        loading: true\n      });\n\n      try {\n        _this.state.token.methods.approve(_this.state.ethSwap.address, tokenAmount).send({\n          from: _this.state.account\n        }).on(\"transactionHash\", function (hash) {\n          _this.state.ethSwap.methods.limitSellCoolTokens(tokenAmount, rate).send({\n            from: _this.state.account\n          }).on(\"transactionHash\", function (hash) {\n            _this.setState({\n              loading: false\n            });\n          }).on(\"error\", function (err) {\n            console.log(\"inside here\", err);\n\n            _this.setState({\n              limitError: true\n            });\n          });\n        });\n      } catch (err) {\n        console.log(\"here is the errrr look heree\", err);\n\n        _this.setState({\n          loading: false\n        });\n      }\n    };\n\n    _this.retryLimitOrder = function () {\n      _this.setState({\n        limitError: false\n      });\n\n      _this.setState({\n        loading: false\n      });\n    };\n\n    _this.state = {\n      account: \"\",\n      token: {},\n      ethSwap: {},\n      ethBalance: \"0\",\n      coolTokenBalance: \"0\",\n      secondTokenBalance: \"0\",\n      loading: true,\n      limitError: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var content;\n\n      if (this.state.loading && this.state.limitError === false) {\n        content = React.createElement(\"p\", {\n          id: \"loader\",\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256\n          },\n          __self: this\n        }, \"Loading...\");\n      } else if (this.state.limitError) {\n        content = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263\n          },\n          __self: this\n        }, \"Limit Order Failed\"), React.createElement(\"button\", {\n          onClick: this.retryLimitOrder,\n          className: \"btn btn-primary btn-block btn-lg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264\n          },\n          __self: this\n        }, \"Click to Retry again\"));\n      } else {\n        content = React.createElement(React.Fragment, null, React.createElement(Main, {\n          coolTokenName: this.state.coolTokenName,\n          ethBalance: this.state.ethBalance,\n          coolTokenBalance: this.state.coolTokenBalance,\n          buyCoolTokens: this.buyCoolTokens,\n          sellCoolTokens: this.sellCoolTokens,\n          limitBuyCoolTokens: this.limitBuyCoolTokens,\n          limitSellCoolTokens: this.limitSellCoolTokens,\n          coolTokenRate: this.state.coolTokenRate,\n          secondTokenRate: this.state.secondTokenRate,\n          secondTokenName: this.state.secondTokenName,\n          secondTokenBalance: this.state.secondTokenBalance,\n          buySecondTokens: this.buySecondTokens,\n          sellSecondTokens: this.sellSecondTokens,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275\n          },\n          __self: this\n        }), React.createElement(NewForm, {\n          buyorsell: \"buy\",\n          placeBuyOrder: this.placeBuyOrder,\n          placeSellOrder: this.placeSellOrder,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290\n          },\n          __self: this\n        }), React.createElement(NewForm, {\n          buyorsell: \"sell\",\n          placeBuyOrder: this.placeBuyOrder,\n          placeSellOrder: this.placeSellOrder,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        account: this.state.account,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"mt-5 container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        role: \"main\",\n        className: \"ml-auto mr-auto col-lg-12\",\n        style: {\n          maxWidth: \"600px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ml-auto mr-auto content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, content)))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/yiheng/Documents/NTU/Y4S2/CZ4153 Blockchain/crypto_exchange/Blockchain-DEX/src/components/App.js"],"names":["React","Component","Web3","CoolToken","SecondToken","EthSwap","Navbar","Main","NewForm","App","loadWeb3","loadBlockchainData","web3","window","eth","getAccounts","accounts","setState","account","getBalance","state","ethBalance","net","getId","networkId","secondTokenData","networks","secondToken","Contract","abi","address","methods","symbol","call","secondTokenName","balanceOf","secondTokenBalance","toString","alert","tokenData","token","coolTokenName","coolTokenBalance","ethSwapData","ethSwap","secondRate","secondTokenRate","coolRate","coolTokenRate","loading","ethereum","enable","currentProvider","props","placeBuyOrder","price","quantity","send","from","on","hash","err","console","log","limitError","placeSellOrder","buySecondTokens","etherAmount","value","sellSecondTokens","tokenAmount","approve","sellCoolTokens","buyCoolTokens","limitBuyCoolTokens","rate","limitSellCoolTokens","retryLimitOrder","content","maxWidth"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,MAAjB,C,CAAyB;;AACzB,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;;IAEMC,G;;;;;;;;;;;;;;;;uBAEI,KAAKC,QAAL,E;;;;uBACA,KAAKC,kBAAL,E;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIAC,gBAAAA,I,GAAOC,MAAM,CAACD,I;;uBAEGA,IAAI,CAACE,GAAL,CAASC,WAAT,E;;;AAAjBC,gBAAAA,Q;AACN,qBAAKC,QAAL,CAAc;AAAEC,kBAAAA,OAAO,EAAEF,QAAQ,CAAC,CAAD;AAAnB,iBAAd;;uBAEyBJ,IAAI,CAACE,GAAL,CAASK,UAAT,CAAoB,KAAKC,KAAL,CAAWF,OAA/B,C;;;AAAnBG,gBAAAA,U;AACN,qBAAKJ,QAAL,CAAc;AAAEI,kBAAAA,UAAU,EAAVA;AAAF,iBAAd,E,CAEA;;;uBACwBT,IAAI,CAACE,GAAL,CAASQ,GAAT,CAAaC,KAAb,E;;;AAAlBC,gBAAAA,S;AAEAC,gBAAAA,e,GAAkBrB,WAAW,CAACsB,QAAZ,CAAqBF,SAArB,C;;qBACpBC,e;;;;;AACIE,gBAAAA,W,GAAc,IAAIf,IAAI,CAACE,GAAL,CAASc,QAAb,CAClBxB,WAAW,CAACyB,GADM,EAElBJ,eAAe,CAACK,OAFE,C;AAIpB,qBAAKb,QAAL,CAAc;AAAEU,kBAAAA,WAAW,EAAXA;AAAF,iBAAd;;uBAC4BA,WAAW,CAACI,OAAZ,CAAoBC,MAApB,CAA2BC,IAA3B,E;;;AAAxBC,gBAAAA,e;;uBAC2BP,WAAW,CAACI,OAAZ,CAC5BI,SAD4B,CAClB,KAAKf,KAAL,CAAWF,OADO,EAE5Be,IAF4B,E;;;AAA3BG,gBAAAA,kB;AAGJ,qBAAKnB,QAAL,CAAc;AAAEmB,kBAAAA,kBAAkB,EAAEA,kBAAkB,CAACC,QAAnB;AAAtB,iBAAd;AACA,qBAAKpB,QAAL,CAAc;AAAEiB,kBAAAA,eAAe,EAAEA,eAAe,CAACG,QAAhB;AAAnB,iBAAd;;;;;AAEAxB,gBAAAA,MAAM,CAACyB,KAAP,CAAa,kDAAb;;;AAGF;AACMC,gBAAAA,S,GAAYpC,SAAS,CAACuB,QAAV,CAAmBF,SAAnB,C;;qBACde,S;;;;;AACIC,gBAAAA,K,GAAQ,IAAI5B,IAAI,CAACE,GAAL,CAASc,QAAb,CAAsBzB,SAAS,CAAC0B,GAAhC,EAAqCU,SAAS,CAACT,OAA/C,C;AACd,qBAAKb,QAAL,CAAc;AAAEuB,kBAAAA,KAAK,EAALA;AAAF,iBAAd;;uBAC0BA,KAAK,CAACT,OAAN,CAAcC,MAAd,CAAqBC,IAArB,E;;;AAAtBQ,gBAAAA,a;;uBACyBD,KAAK,CAACT,OAAN,CAC1BI,SAD0B,CAChB,KAAKf,KAAL,CAAWF,OADK,EAE1Be,IAF0B,E;;;AAAzBS,gBAAAA,gB;AAIJ,qBAAKzB,QAAL,CAAc;AAAEyB,kBAAAA,gBAAgB,EAAEA,gBAAgB,CAACL,QAAjB;AAApB,iBAAd;AACA,qBAAKpB,QAAL,CAAc;AAAEwB,kBAAAA,aAAa,EAAEA,aAAa,CAACJ,QAAd;AAAjB,iBAAd;;;;;AAEAxB,gBAAAA,MAAM,CAACyB,KAAP,CAAa,kDAAb;;;AAGF;AACMK,gBAAAA,W,GAActC,OAAO,CAACqB,QAAR,CAAiBF,SAAjB,C;;qBAChBmB,W;;;;;AACIC,gBAAAA,O,GAAU,IAAIhC,IAAI,CAACE,GAAL,CAASc,QAAb,CAAsBvB,OAAO,CAACwB,GAA9B,EAAmCc,WAAW,CAACb,OAA/C,C;AAChB,qBAAKb,QAAL,CAAc;AAAE2B,kBAAAA,OAAO,EAAPA;AAAF,iBAAd;;uBAC4BA,OAAO,CAACb,OAAR,CAAgBc,UAAhB,CAA2BZ,IAA3B,E;;;AAAxBa,gBAAAA,e;AACJ,qBAAK7B,QAAL,CAAc;AAAE6B,kBAAAA,eAAe,EAAEA,eAAe,CAACT,QAAhB;AAAnB,iBAAd;;uBAC0BO,OAAO,CAACb,OAAR,CAAgBgB,QAAhB,CAAyBd,IAAzB,E;;;AAAtBe,gBAAAA,a;AACJ,qBAAK/B,QAAL,CAAc;AAAE+B,kBAAAA,aAAa,EAAEA,aAAa,CAACX,QAAd;AAAjB,iBAAd;;;;;AAEAxB,gBAAAA,MAAM,CAACyB,KAAP,CAAa,oDAAb;;;AAGF,qBAAKrB,QAAL,CAAc;AAAEgC,kBAAAA,OAAO,EAAE;AAAX,iBAAd;;;;;;;;;;;;;;;;;;;;;;;;;;qBAIIpC,MAAM,CAACqC,Q;;;;;AACTrC,gBAAAA,MAAM,CAACD,IAAP,GAAc,IAAIV,IAAJ,CAASW,MAAM,CAACqC,QAAhB,CAAd;;uBACMrC,MAAM,CAACqC,QAAP,CAAgBC,MAAhB,E;;;;;;;AACD,oBAAItC,MAAM,CAACD,IAAX,EAAiB;AACtBC,kBAAAA,MAAM,CAACD,IAAP,GAAc,IAAIV,IAAJ,CAASW,MAAM,CAACD,IAAP,CAAYwC,eAArB,CAAd;AACD,iBAFM,MAEA;AACLvC,kBAAAA,MAAM,CAACyB,KAAP,CACE,qEADF;AAGD;;;;;;;;;;;;;;;QAGH;;;;AAmJA,eAAYe,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;;AADiB,UAjJnBC,aAiJmB,GAjJH,UAACC,KAAD,EAAQC,QAAR,EAAqB;AACnC,YAAKvC,QAAL,CAAc;AAAEgC,QAAAA,OAAO,EAAE;AAAX,OAAd;;AAEA,UAAI;AACF,cAAK7B,KAAL,CAAWwB,OAAX,CAAmBb,OAAnB,CACGuB,aADH,CACiBC,KADjB,EACwBC,QADxB,EAEGC,IAFH,CAEQ;AAAEC,UAAAA,IAAI,EAAE,MAAKtC,KAAL,CAAWF;AAAnB,SAFR,EAGGyC,EAHH,CAGM,iBAHN,EAGyB,UAACC,IAAD,EAAU;AAC/B,gBAAK3C,QAAL,CAAc;AAAEgC,YAAAA,OAAO,EAAE;AAAX,WAAd;AACD,SALH,EAMGU,EANH,CAMM,OANN,EAMe,UAACE,GAAD,EAAS;AACpBC,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,GAA3B;;AACA,gBAAK5C,QAAL,CAAc;AAAE+C,YAAAA,UAAU,EAAE;AAAd,WAAd;AACD,SATH;AAUD,OAXD,CAWE,OAAOH,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CF,GAA5C;;AACA,cAAK5C,QAAL,CAAc;AAAEgC,UAAAA,OAAO,EAAE;AAAX,SAAd;AACD;AACF,KA+HkB;;AAAA,UA7HnBgB,cA6HmB,GA7HF,UAACV,KAAD,EAAQC,QAAR,EAAqB;AACpC,YAAKvC,QAAL,CAAc;AAAEgC,QAAAA,OAAO,EAAE;AAAX,OAAd;;AACA,UAAI;AACF,cAAK7B,KAAL,CAAWwB,OAAX,CAAmBb,OAAnB,CACGkC,cADH,CACkBV,KADlB,EACyBC,QADzB,EAEGC,IAFH,CAEQ;AAAEC,UAAAA,IAAI,EAAE,MAAKtC,KAAL,CAAWF;AAAnB,SAFR,EAGGyC,EAHH,CAGM,iBAHN,EAGyB,UAACC,IAAD,EAAU;AAC/B,gBAAK3C,QAAL,CAAc;AAAEgC,YAAAA,OAAO,EAAE;AAAX,WAAd;AACD,SALH;AAMD,OAPD,CAOE,OAAOY,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CF,GAA5C;;AACA,cAAK5C,QAAL,CAAc;AAAEgC,UAAAA,OAAO,EAAE;AAAX,SAAd;AACD;AACF,KAgHkB;;AAAA,UA7GnBiB,eA6GmB,GA7GD,UAACC,WAAD,EAAiB;AACjC,YAAKlD,QAAL,CAAc;AAAEgC,QAAAA,OAAO,EAAE;AAAX,OAAd;;AACA,UAAI;AACF,cAAK7B,KAAL,CAAWwB,OAAX,CAAmBb,OAAnB,CACGmC,eADH,GAEGT,IAFH,CAEQ;AAAEW,UAAAA,KAAK,EAAED,WAAT;AAAsBT,UAAAA,IAAI,EAAE,MAAKtC,KAAL,CAAWF;AAAvC,SAFR,EAGGyC,EAHH,CAGM,iBAHN,EAGyB,UAACC,IAAD,EAAU;AAC/B,gBAAK3C,QAAL,CAAc;AAAEgC,YAAAA,OAAO,EAAE;AAAX,WAAd;AACD,SALH,EAMGU,EANH,CAMM,OANN,EAMe,UAACE,GAAD,EAAS;AACpBC,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,GAA3B;;AACA,gBAAK5C,QAAL,CAAc;AAAE+C,YAAAA,UAAU,EAAE;AAAd,WAAd;AACD,SATH;AAUD,OAXD,CAWE,OAAOH,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CF,GAA5C;;AACA,cAAK5C,QAAL,CAAc;AAAEgC,UAAAA,OAAO,EAAE;AAAX,SAAd;AACD;AACF,KA4FkB;;AAAA,UA1FnBoB,gBA0FmB,GA1FA,UAACC,WAAD,EAAiB;AAClC,YAAKrD,QAAL,CAAc;AAAEgC,QAAAA,OAAO,EAAE;AAAX,OAAd;;AACA,YAAK7B,KAAL,CAAWoB,KAAX,CAAiBT,OAAjB,CACGwC,OADH,CACW,MAAKnD,KAAL,CAAWwB,OAAX,CAAmBd,OAD9B,EACuCwC,WADvC,EAEGb,IAFH,CAEQ;AAAEC,QAAAA,IAAI,EAAE,MAAKtC,KAAL,CAAWF;AAAnB,OAFR,EAGGyC,EAHH,CAGM,iBAHN,EAGyB,UAACC,IAAD,EAAU;AAC/B,cAAKxC,KAAL,CAAWwB,OAAX,CAAmBb,OAAnB,CACGyC,cADH,CACkBF,WADlB,EAEGb,IAFH,CAEQ;AAAEC,UAAAA,IAAI,EAAE,MAAKtC,KAAL,CAAWF;AAAnB,SAFR,EAGGyC,EAHH,CAGM,iBAHN,EAGyB,UAACC,IAAD,EAAU;AAC/B,gBAAK3C,QAAL,CAAc;AAAEgC,YAAAA,OAAO,EAAE;AAAX,WAAd;AACD,SALH;AAMD,OAVH;AAWD,KA6EkB;;AAAA,UA1EnBwB,aA0EmB,GA1EH,UAACN,WAAD,EAAiB;AAC/B,YAAKlD,QAAL,CAAc;AAAEgC,QAAAA,OAAO,EAAE;AAAX,OAAd;;AACA,YAAK7B,KAAL,CAAWwB,OAAX,CAAmBb,OAAnB,CACG0C,aADH,GAEGhB,IAFH,CAEQ;AAAEW,QAAAA,KAAK,EAAED,WAAT;AAAsBT,QAAAA,IAAI,EAAE,MAAKtC,KAAL,CAAWF;AAAvC,OAFR,EAGGyC,EAHH,CAGM,iBAHN,EAGyB,UAACC,IAAD,EAAU;AAC/B,cAAK3C,QAAL,CAAc;AAAEgC,UAAAA,OAAO,EAAE;AAAX,SAAd;AACD,OALH;AAMD,KAkEkB;;AAAA,UAhEnByB,kBAgEmB,GAhEE,UAACC,IAAD,EAAOR,WAAP,EAAuB;AAC1C,YAAKlD,QAAL,CAAc;AAAEgC,QAAAA,OAAO,EAAE;AAAX,OAAd;;AACA,UAAI;AACF,cAAK7B,KAAL,CAAWwB,OAAX,CAAmBb,OAAnB,CACG2C,kBADH,CACsBC,IADtB,EAEGlB,IAFH,CAEQ;AAAEW,UAAAA,KAAK,EAAED,WAAT;AAAsBT,UAAAA,IAAI,EAAE,MAAKtC,KAAL,CAAWF;AAAvC,SAFR,EAGGyC,EAHH,CAGM,iBAHN,EAGyB,UAACC,IAAD,EAAU;AAC/B,gBAAK3C,QAAL,CAAc;AAAEgC,YAAAA,OAAO,EAAE;AAAX,WAAd;AACD,SALH,EAMGU,EANH,CAMM,OANN,EAMe,UAACE,GAAD,EAAS;AACpBC,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,GAA3B;;AACA,gBAAK5C,QAAL,CAAc;AAAE+C,YAAAA,UAAU,EAAE;AAAd,WAAd;AACD,SATH;AAUD,OAXD,CAWE,OAAOH,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CF,GAA5C;;AACA,cAAK5C,QAAL,CAAc;AAAEgC,UAAAA,OAAO,EAAE;AAAX,SAAd;AACD;AACF,KA+CkB;;AAAA,UA7CnBuB,cA6CmB,GA7CF,UAACF,WAAD,EAAiB;AAChC,YAAKrD,QAAL,CAAc;AAAEgC,QAAAA,OAAO,EAAE;AAAX,OAAd;;AACA,YAAK7B,KAAL,CAAWoB,KAAX,CAAiBT,OAAjB,CACGwC,OADH,CACW,MAAKnD,KAAL,CAAWwB,OAAX,CAAmBd,OAD9B,EACuCwC,WADvC,EAEGb,IAFH,CAEQ;AAAEC,QAAAA,IAAI,EAAE,MAAKtC,KAAL,CAAWF;AAAnB,OAFR,EAGGyC,EAHH,CAGM,iBAHN,EAGyB,UAACC,IAAD,EAAU;AAC/B,cAAKxC,KAAL,CAAWwB,OAAX,CAAmBb,OAAnB,CACGyC,cADH,CACkBF,WADlB,EAEGb,IAFH,CAEQ;AAAEC,UAAAA,IAAI,EAAE,MAAKtC,KAAL,CAAWF;AAAnB,SAFR,EAGGyC,EAHH,CAGM,iBAHN,EAGyB,UAACC,IAAD,EAAU;AAC/B,gBAAK3C,QAAL,CAAc;AAAEgC,YAAAA,OAAO,EAAE;AAAX,WAAd;AACD,SALH;AAMD,OAVH;AAWD,KAgCkB;;AAAA,UA9BnB2B,mBA8BmB,GA9BG,UAACD,IAAD,EAAOL,WAAP,EAAuB;AAC3C,YAAKrD,QAAL,CAAc;AAAEgC,QAAAA,OAAO,EAAE;AAAX,OAAd;;AACA,UAAI;AACF,cAAK7B,KAAL,CAAWoB,KAAX,CAAiBT,OAAjB,CACGwC,OADH,CACW,MAAKnD,KAAL,CAAWwB,OAAX,CAAmBd,OAD9B,EACuCwC,WADvC,EAEGb,IAFH,CAEQ;AAAEC,UAAAA,IAAI,EAAE,MAAKtC,KAAL,CAAWF;AAAnB,SAFR,EAGGyC,EAHH,CAGM,iBAHN,EAGyB,UAACC,IAAD,EAAU;AAC/B,gBAAKxC,KAAL,CAAWwB,OAAX,CAAmBb,OAAnB,CACG6C,mBADH,CACuBN,WADvB,EACoCK,IADpC,EAEGlB,IAFH,CAEQ;AAAEC,YAAAA,IAAI,EAAE,MAAKtC,KAAL,CAAWF;AAAnB,WAFR,EAGGyC,EAHH,CAGM,iBAHN,EAGyB,UAACC,IAAD,EAAU;AAC/B,kBAAK3C,QAAL,CAAc;AAAEgC,cAAAA,OAAO,EAAE;AAAX,aAAd;AACD,WALH,EAMGU,EANH,CAMM,OANN,EAMe,UAACE,GAAD,EAAS;AACpBC,YAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,GAA3B;;AACA,kBAAK5C,QAAL,CAAc;AAAE+C,cAAAA,UAAU,EAAE;AAAd,aAAd;AACD,WATH;AAUD,SAdH;AAeD,OAhBD,CAgBE,OAAOH,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CF,GAA5C;;AACA,cAAK5C,QAAL,CAAc;AAAEgC,UAAAA,OAAO,EAAE;AAAX,SAAd;AACD;AACF,KAQkB;;AAAA,UALnB4B,eAKmB,GALD,YAAM;AACtB,YAAK5D,QAAL,CAAc;AAAE+C,QAAAA,UAAU,EAAE;AAAd,OAAd;;AACA,YAAK/C,QAAL,CAAc;AAAEgC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAEkB;;AAEjB,UAAK7B,KAAL,GAAa;AACXF,MAAAA,OAAO,EAAE,EADE;AAEXsB,MAAAA,KAAK,EAAE,EAFI;AAGXI,MAAAA,OAAO,EAAE,EAHE;AAIXvB,MAAAA,UAAU,EAAE,GAJD;AAKXqB,MAAAA,gBAAgB,EAAE,GALP;AAMXN,MAAAA,kBAAkB,EAAE,GANT;AAOXa,MAAAA,OAAO,EAAE,IAPE;AAQXe,MAAAA,UAAU,EAAE;AARD,KAAb;AAFiB;AAYlB;;;;6BAEQ;AACP,UAAIc,OAAJ;;AACA,UAAI,KAAK1D,KAAL,CAAW6B,OAAX,IAAsB,KAAK7B,KAAL,CAAW4C,UAAX,KAA0B,KAApD,EAA2D;AACzDc,QAAAA,OAAO,GACL;AAAG,UAAA,EAAE,EAAC,QAAN;AAAe,UAAA,SAAS,EAAC,aAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF;AAKD,OAND,MAMO,IAAI,KAAK1D,KAAL,CAAW4C,UAAf,EAA2B;AAChCc,QAAAA,OAAO,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAEE;AACE,UAAA,OAAO,EAAE,KAAKD,eADhB;AAEE,UAAA,SAAS,EAAC,kCAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFF,CADF;AAWD,OAZM,MAYA;AACLC,QAAAA,OAAO,GACL,0CACE,oBAAC,IAAD;AACE,UAAA,aAAa,EAAE,KAAK1D,KAAL,CAAWqB,aAD5B;AAEE,UAAA,UAAU,EAAE,KAAKrB,KAAL,CAAWC,UAFzB;AAGE,UAAA,gBAAgB,EAAE,KAAKD,KAAL,CAAWsB,gBAH/B;AAIE,UAAA,aAAa,EAAE,KAAK+B,aAJtB;AAKE,UAAA,cAAc,EAAE,KAAKD,cALvB;AAME,UAAA,kBAAkB,EAAE,KAAKE,kBAN3B;AAOE,UAAA,mBAAmB,EAAE,KAAKE,mBAP5B;AAQE,UAAA,aAAa,EAAE,KAAKxD,KAAL,CAAW4B,aAR5B;AASE,UAAA,eAAe,EAAE,KAAK5B,KAAL,CAAW0B,eAT9B;AAUE,UAAA,eAAe,EAAE,KAAK1B,KAAL,CAAWc,eAV9B;AAWE,UAAA,kBAAkB,EAAE,KAAKd,KAAL,CAAWgB,kBAXjC;AAYE,UAAA,eAAe,EAAE,KAAK8B,eAZxB;AAaE,UAAA,gBAAgB,EAAE,KAAKG,gBAbzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAgBE,oBAAC,OAAD;AACE,UAAA,SAAS,EAAC,KADZ;AAEE,UAAA,aAAa,EAAE,KAAKf,aAFtB;AAGE,UAAA,cAAc,EAAE,KAAKW,cAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAhBF,EAsBE,oBAAC,OAAD;AACE,UAAA,SAAS,EAAC,MADZ;AAEE,UAAA,aAAa,EAAE,KAAKX,aAFtB;AAGE,UAAA,cAAc,EAAE,KAAKW,cAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAtBF,CADF;AA8BD;;AAED,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAK7C,KAAL,CAAWF,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAC,2BAFZ;AAGE,QAAA,KAAK,EAAE;AAAE6D,UAAAA,QAAQ,EAAE;AAAZ,SAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0CD,OAA1C,CALF,CADF,CADF,CAFF,CADF;AAgBD;;;;EAtTe7E,S;;AAyTlB,eAAeQ,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Web3 from \"web3\"; // import web3\nimport CoolToken from \"../abis/CoolToken.json\";\nimport SecondToken from \"../abis/SecondToken.json\";\nimport EthSwap from \"../abis/EthSwap.json\";\nimport Navbar from \"./Navbar\";\nimport Main from \"./Main\";\nimport \"./App.css\";\nimport NewForm from \"./NewForm\";\n\nclass App extends Component {\n  async componentWillMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n\n    const accounts = await web3.eth.getAccounts();\n    this.setState({ account: accounts[0] });\n\n    const ethBalance = await web3.eth.getBalance(this.state.account);\n    this.setState({ ethBalance });\n\n    /////////////////////// Load SecondToken balance name ///////////////////////\n    const networkId = await web3.eth.net.getId();\n\n    const secondTokenData = SecondToken.networks[networkId];\n    if (secondTokenData) {\n      const secondToken = new web3.eth.Contract(\n        SecondToken.abi,\n        secondTokenData.address\n      );\n      this.setState({ secondToken });\n      let secondTokenName = await secondToken.methods.symbol.call();\n      let secondTokenBalance = await secondToken.methods\n        .balanceOf(this.state.account)\n        .call();\n      this.setState({ secondTokenBalance: secondTokenBalance.toString() });\n      this.setState({ secondTokenName: secondTokenName.toString() });\n    } else {\n      window.alert(\"Token contract not deployed to detected network.\");\n    }\n\n    /////////////////////// Load CoolToken balance name ///////////////////////\n    const tokenData = CoolToken.networks[networkId];\n    if (tokenData) {\n      const token = new web3.eth.Contract(CoolToken.abi, tokenData.address);\n      this.setState({ token });\n      let coolTokenName = await token.methods.symbol.call();\n      let coolTokenBalance = await token.methods\n        .balanceOf(this.state.account)\n        .call();\n\n      this.setState({ coolTokenBalance: coolTokenBalance.toString() });\n      this.setState({ coolTokenName: coolTokenName.toString() });\n    } else {\n      window.alert(\"Token contract not deployed to detected network.\");\n    }\n\n    /////////////////////// Load EthSwap ///////////////////////\n    const ethSwapData = EthSwap.networks[networkId];\n    if (ethSwapData) {\n      const ethSwap = new web3.eth.Contract(EthSwap.abi, ethSwapData.address);\n      this.setState({ ethSwap });\n      let secondTokenRate = await ethSwap.methods.secondRate.call();\n      this.setState({ secondTokenRate: secondTokenRate.toString() });\n      let coolTokenRate = await ethSwap.methods.coolRate.call();\n      this.setState({ coolTokenRate: coolTokenRate.toString() });\n    } else {\n      window.alert(\"EthSwap contract not deployed to detected network.\");\n    }\n\n    this.setState({ loading: false });\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      );\n    }\n  }\n\n  /////////////////////// Order book placeBuyOrder EthSwap ///////////////////////\n\n  placeBuyOrder = (price, quantity) => {\n    this.setState({ loading: true });\n\n    try {\n      this.state.ethSwap.methods\n        .placeBuyOrder(price, quantity)\n        .send({ from: this.state.account })\n        .on(\"transactionHash\", (hash) => {\n          this.setState({ loading: false });\n        })\n        .on(\"error\", (err) => {\n          console.log(\"inside here\", err);\n          this.setState({ limitError: true });\n        });\n    } catch (err) {\n      console.log(\"here is the errrr look heree\", err);\n      this.setState({ loading: false });\n    }\n  };\n\n  placeSellOrder = (price, quantity) => {\n    this.setState({ loading: true });\n    try {\n      this.state.ethSwap.methods\n        .placeSellOrder(price, quantity)\n        .send({ from: this.state.account })\n        .on(\"transactionHash\", (hash) => {\n          this.setState({ loading: false });\n        });\n    } catch (err) {\n      console.log(\"here is the errrr look heree\", err);\n      this.setState({ loading: false });\n    }\n  };\n  /////////////////////// secondToken EthSwap ///////////////////////\n\n  buySecondTokens = (etherAmount) => {\n    this.setState({ loading: true });\n    try {\n      this.state.ethSwap.methods\n        .buySecondTokens()\n        .send({ value: etherAmount, from: this.state.account })\n        .on(\"transactionHash\", (hash) => {\n          this.setState({ loading: false });\n        })\n        .on(\"error\", (err) => {\n          console.log(\"inside here\", err);\n          this.setState({ limitError: true });\n        });\n    } catch (err) {\n      console.log(\"here is the errrr look heree\", err);\n      this.setState({ loading: false });\n    }\n  };\n\n  sellSecondTokens = (tokenAmount) => {\n    this.setState({ loading: true });\n    this.state.token.methods\n      .approve(this.state.ethSwap.address, tokenAmount)\n      .send({ from: this.state.account })\n      .on(\"transactionHash\", (hash) => {\n        this.state.ethSwap.methods\n          .sellCoolTokens(tokenAmount)\n          .send({ from: this.state.account })\n          .on(\"transactionHash\", (hash) => {\n            this.setState({ loading: false });\n          });\n      });\n  };\n  /////////////////////// coolToken EthSwap ///////////////////////\n\n  buyCoolTokens = (etherAmount) => {\n    this.setState({ loading: true });\n    this.state.ethSwap.methods\n      .buyCoolTokens()\n      .send({ value: etherAmount, from: this.state.account })\n      .on(\"transactionHash\", (hash) => {\n        this.setState({ loading: false });\n      });\n  };\n\n  limitBuyCoolTokens = (rate, etherAmount) => {\n    this.setState({ loading: true });\n    try {\n      this.state.ethSwap.methods\n        .limitBuyCoolTokens(rate)\n        .send({ value: etherAmount, from: this.state.account })\n        .on(\"transactionHash\", (hash) => {\n          this.setState({ loading: false });\n        })\n        .on(\"error\", (err) => {\n          console.log(\"inside here\", err);\n          this.setState({ limitError: true });\n        });\n    } catch (err) {\n      console.log(\"here is the errrr look heree\", err);\n      this.setState({ loading: false });\n    }\n  };\n\n  sellCoolTokens = (tokenAmount) => {\n    this.setState({ loading: true });\n    this.state.token.methods\n      .approve(this.state.ethSwap.address, tokenAmount)\n      .send({ from: this.state.account })\n      .on(\"transactionHash\", (hash) => {\n        this.state.ethSwap.methods\n          .sellCoolTokens(tokenAmount)\n          .send({ from: this.state.account })\n          .on(\"transactionHash\", (hash) => {\n            this.setState({ loading: false });\n          });\n      });\n  };\n\n  limitSellCoolTokens = (rate, tokenAmount) => {\n    this.setState({ loading: true });\n    try {\n      this.state.token.methods\n        .approve(this.state.ethSwap.address, tokenAmount)\n        .send({ from: this.state.account })\n        .on(\"transactionHash\", (hash) => {\n          this.state.ethSwap.methods\n            .limitSellCoolTokens(tokenAmount, rate)\n            .send({ from: this.state.account })\n            .on(\"transactionHash\", (hash) => {\n              this.setState({ loading: false });\n            })\n            .on(\"error\", (err) => {\n              console.log(\"inside here\", err);\n              this.setState({ limitError: true });\n            });\n        });\n    } catch (err) {\n      console.log(\"here is the errrr look heree\", err);\n      this.setState({ loading: false });\n    }\n  };\n\n  //////////////////// Error handling /////////////////////////////\n  retryLimitOrder = () => {\n    this.setState({ limitError: false });\n    this.setState({ loading: false });\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: \"\",\n      token: {},\n      ethSwap: {},\n      ethBalance: \"0\",\n      coolTokenBalance: \"0\",\n      secondTokenBalance: \"0\",\n      loading: true,\n      limitError: false,\n    };\n  }\n\n  render() {\n    let content;\n    if (this.state.loading && this.state.limitError === false) {\n      content = (\n        <p id=\"loader\" className=\"text-center\">\n          Loading...\n        </p>\n      );\n    } else if (this.state.limitError) {\n      content = (\n        <div>\n          <p className=\"text-center\">Limit Order Failed</p>\n          <button\n            onClick={this.retryLimitOrder}\n            className=\"btn btn-primary btn-block btn-lg\"\n          >\n            Click to Retry again\n          </button>\n        </div>\n      );\n    } else {\n      content = (\n        <>\n          <Main\n            coolTokenName={this.state.coolTokenName}\n            ethBalance={this.state.ethBalance}\n            coolTokenBalance={this.state.coolTokenBalance}\n            buyCoolTokens={this.buyCoolTokens}\n            sellCoolTokens={this.sellCoolTokens}\n            limitBuyCoolTokens={this.limitBuyCoolTokens}\n            limitSellCoolTokens={this.limitSellCoolTokens}\n            coolTokenRate={this.state.coolTokenRate}\n            secondTokenRate={this.state.secondTokenRate}\n            secondTokenName={this.state.secondTokenName}\n            secondTokenBalance={this.state.secondTokenBalance}\n            buySecondTokens={this.buySecondTokens}\n            sellSecondTokens={this.sellSecondTokens}\n          />\n          <NewForm\n            buyorsell=\"buy\"\n            placeBuyOrder={this.placeBuyOrder}\n            placeSellOrder={this.placeSellOrder}\n          />\n\n          <NewForm\n            buyorsell=\"sell\"\n            placeBuyOrder={this.placeBuyOrder}\n            placeSellOrder={this.placeSellOrder}\n          />\n        </>\n      );\n    }\n\n    return (\n      <div>\n        <Navbar account={this.state.account} />\n        <div className=\"mt-5 container-fluid\">\n          <div className=\"row\">\n            <main\n              role=\"main\"\n              className=\"ml-auto mr-auto col-lg-12\"\n              style={{ maxWidth: \"600px\" }}\n            >\n              <div className=\"ml-auto mr-auto content\">{content}</div>\n            </main>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}